#Euler #2

#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import numpy as np

def fibo_len(x):           
    fibo_list = []
    for i in range(0, x):
        if i <= 1:
            fibo_list.append(1)
        else:
            fibo_list.append(fibo_list[i - 1] + fibo_list[i - 2])
    return(fibo_list)

def fibo_lim(x):
    fibo_list = []
    next = 1
    while next <= x:
        cursor = len(fibo_list)
        if cursor <= 1:
            next = 1
        else:
            next = fibo_list[cursor - 1] + fibo_list[cursor - 2]
        if next <= x:
            fibo_list.append(next)
        else:
            break
    return np.array(fibo_list)


fibo_4m = fibo_lim(4000000)

fibo_4m_e = fibo_4m[fibo_4m % 2 == 0]

answer = sum(fibo_4m_e)

